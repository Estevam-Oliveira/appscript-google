//ETAPA 1/4*******Configurar Link da Planilha*****

var wbook = SpreadsheetApp.openByUrl('LINK DA PLANILHA');

//ETAPA 2/4*******Configurar nome da Aba que ser√° usada*****

var sheet = wbook.getSheetByName('NOME DA ABA');


function doGet(e) {


  var action = e.parameter.action;

  if (action == "Read") {
    return Read(e);
  }

  else if (action == "Create") {
    return Create(e);
  }

  else if (action == "Update") {
    return Update(e);
  }

  else if (action == "Delete") {
    return Delete(e);
  }
}


function Create(e) {

  var json = JSON.stringify(e.parameter);
  var dados = JSON.parse(json);

  //ETAPA 3/4*******Configurar a sequencia das colunas *****

  sheet.appendRow([dados.id_registro, dados.nome, dados.telefone, dados.email, dados.salario]);

  return ContentService.createTextOutput([json]).setMimeType(ContentService.MimeType.JSON);
}

function Read(e) {
  var rows = sheet.getRange(2, 1, sheet.getLastRow() - 1, sheet.getLastColumn()).getValues();
  
  
  var data = [];

  for (var i = 0; i < rows.length; i++) {
    var row = rows[i];
    var record = {};

    //ETAPA 4/4*****Edite a linha abaixo com os nomes da colunas que deseja*****
    
    record['id_registro'] = row[0]
    record['Nome'] = row[1];
    record['Telefone'] = row[2];
    record['Email'] = row[3];
    record['Salario'] = row[4];
    

    data.push(record);

  }
  var result = JSON.stringify(data);

  return ContentService.createTextOutput(result).setMimeType(ContentService.MimeType.JSON);
}

function Update(e) {

    var json = JSON.stringify(e.parameter);
    var dados = JSON.parse(json);

    var id_registro = dados.id_registro;
    var rows = sheet.getDataRange();
    var numRows = rows.getNumRows();
    var values = rows.getValues();

    for (var i = 1; i < numRows; i++) {
      var row = values[i];

      if (row[0] == id_registro) {
        row[1] = dados.Nome;
        row[2] = dados.Telefone;
        row[3] = dados.Email;
        row[4] = dados.Salario;
        break;
      }
    }

    var newRange = sheet.getRange(1, 1, numRows, values[0].length);
    newRange.setValues(values);

    return ContentService.createTextOutput([json]).setMimeType(ContentService.MimeType.JSON);
  }

function Delete(e) {
    var id_registro = e.parameter.id_registro;

    var rows = sheet.getDataRange().getValues();

    for (var i = 0; i < rows.length; i++) {
      var row = rows[i];
      if (row[0] == id_registro) {
        sheet.deleteRow(i+1);
        break;
      }
    }

    return ContentService.createTextOutput("Data deleted successfully.").setMimeType(ContentService.MimeType.TEXT);
  }
 
 }
